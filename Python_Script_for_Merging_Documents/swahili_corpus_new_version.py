# -*- coding: utf-8 -*-
"""Swahili_Corpus_New_Version.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pUG-R_NqZyzjzxR1hUn39LtIYCzGDVju

# WELCOME TO SWAHILI CORPUS PYTHON SCRIPTS

### Here are the Steps that are Involved in Creating the Swahili Corpus.


1.   Identification of Categories
  

*   I have identified almost 15 Swahili categories which are:-


> Afya, Bunge, Dini, Habari_Mawasiliano, Elimu, Mazingira_Muungano, Sanaa_Michezo, Katiba_Sheria, Kilimo, Maendeleo_ya_Jamii, Maliasili_Utalii, Serikali, Siasa, Uchumi, Ulinzi.


2.   Data Collection from official sources


> For each category, I have collected the documents which are in Swahili Language, and each category has atleast 100 documents in Swahili language.



3.   Download PDF and Docx Documents


> So, the documents have been downloaded and they are in each respective category.



4.   Python Script for Merging Documents


> The activity was done on 30th January 2024



5.   Cleaning


> The activity was done on 30th January 2024



6.   Generate Output Category Statistics


> The activity was done on 30th January 2024.

### Mount the drive in Google Colab
"""

from google.colab import drive
drive.mount("/content/drive")

"""### Install PyPDF2 and python-docx into google colab"""

!pip install PyPDF2

!pip install python-docx

!pip install pycryptodome

"""### Import Necessary Packages in Google Colab"""

import os
from PyPDF2 import PdfWriter, PdfReader
from docx import Document

!pip install pycryptodome --no-binary :all:

!pip install fitz

"""### Python Script for Merging Documents for each category"""

def merge_documents_in_category(category_folder):
    pdf_files = []
    docx_files = []

    # Iterate through files in the category folder
    for filename in os.listdir(category_folder):
        filepath = os.path.join(category_folder, filename)
        if filename.endswith(".pdf"):
            pdf_files.append(filepath)
        elif filename.endswith(".docx"):
            docx_files.append(filepath)

    # Output file path for the merged document
    output_file = f"{category_folder}_merged.docx"  # Or you can change the extension if you prefer PDF

    # Merge documents
    merge_documents(pdf_files, docx_files, output_file)

def merge_documents(pdf_files, docx_files, output_file):
    # Merge PDF files
    merged_pdf_writer = PdfWriter()
    for pdf_file in pdf_files:
        with open(pdf_file, "rb") as f:
            reader = PdfReader(f)
            for page in reader.pages:
                merged_pdf_writer.add_page(page)

    with open(output_file, "wb") as f:
        merged_pdf_writer.write(f)

    # Merge DOCX files
    merged_docx = Document()
    for docx_file in docx_files:
        doc = Document(docx_file)
        for element in doc.element.body:
            merged_docx.element.body.append(element)
    merged_docx.save(output_file)

if __name__ == "__main__":
    # Path to the Documents folder containing category folders
    documents_folder = "/content/drive/MyDrive/Swahili_Corpus/Documents"

    # Iterate through each category folder
    for category_folder in os.listdir(documents_folder):
        category_folder_path = os.path.join(documents_folder, category_folder)
        if os.path.isdir(category_folder_path):
            merge_documents_in_category(category_folder_path)

!pip install docx2pdf

!pip install fpdf

!pip install reportlab

from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Paragraph
from reportlab.lib.styles import getSampleStyleSheet

from fpdf import FPDF

class MyFPDF(FPDF):
    def _escape(self, s):
        return s

def convert_docx_to_pdf(docx_path, pdf_path):
    doc = Document(docx_path)
    pdf = SimpleDocTemplate(pdf_path, pagesize=letter)
    styles = getSampleStyleSheet()
    story = []
    for paragraph in doc.paragraphs:
        story.append(Paragraph(paragraph.text, styles['Normal']))
    pdf.build(story)

def merge_documents(folder_path, output_file):
    merger = PdfMerger()
    for filename in os.listdir(folder_path):
        if filename.endswith('.pdf'):
            merger.append(os.path.join(folder_path, filename))
        elif filename.endswith('.docx'):
            docx_file = os.path.join(folder_path, filename)
            temp_pdf_file = os.path.splitext(docx_file)[0] + '.pdf'
            convert_docx_to_pdf(docx_file, temp_pdf_file)
            merger.append(temp_pdf_file)
            os.remove(temp_pdf_file)
    merger.write(output_file)
    merger.close()

if __name__ == "__main__":
    folder_path = "/content/drive/MyDrive/Swahili_Corpus/Documents/Ulinzi"
    output_file = "/content/drive/MyDrive/Swahili_Corpus/Merged_Documents/Ulinzi_Merged.pdf"

    merge_documents(folder_path, output_file)